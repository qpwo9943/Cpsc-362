# now only first index is the answer need to change
# play again menu
# image?
# in/correct ui
# division deciaml point
# atleast second trial

from tkinter import *
from random import *

# from time import *
# import threading

win = Tk()
win.geometry("350x450")

Label(win, text="ASMD", justify=CENTER, font="Times 21").pack()
Label(win, text="Learning Center", font="Times 17").pack()

frame = Frame(win)


# getting x , y
def click():
    num1 = int(random() * 10 + 1)
    num2 = int(random() * 10 + 1)
    return num1, num2


def destroyMenu():
    btn_addition.destroy()
    btn_subtraction.destroy()
    btn_multiplication.destroy()
    btn_dvision.destroy()
    btn_exit.destroy()


# generating buttons for ans
def ansButton(x,y,anslist,questionLabel):
    bt1 = Button(frame, text=str(anslist[0]), padx=35, pady=35, command=lambda: checkAns(anslist[0]))
    bt2 = Button(frame, text=str(anslist[1]), padx=35, pady=35, command=lambda: checkAns(anslist[1]))
    bt3 = Button(frame, text=str(anslist[2]), padx=35, pady=35, command=lambda: checkAns(anslist[2]))
    bt4 = Button(frame, text=str(anslist[3]), padx=35, pady=35, command=lambda: checkAns(anslist[3]))

    bt1.grid(row=1, column=0)
    bt2.grid(row=1, column=1)
    bt3.grid(row=2, column=0)
    bt4.grid(row=2, column=1)

    def destroy():
        bt1.destroy()
        bt2.destroy()
        bt3.destroy()
        bt4.destroy()

    # check the answer
    def checkAns(ans):
        destroy()
        questionLabel.config(text="{0} + {1} = {2}".format(x,y,realAns))
        if ans == realAns:
            ansLabel = Label(frame, text="CORRECT!", font="Time 21")
            ansLabel2 = Label(frame, text=realAns, font="Time 21")
            ansLabel2.grid(row=2, column=0)
            ansLabel.grid(row=1, column=0)
            btn_continue = Button(frame, text="Continue",font="Time 15", padx=35, pady=35, command= lambda: continue_learning())
            btn_exit = Button(frame, text="Exit",font="Time 15", padx=35, pady=35, command=win.quit)
            btn_exit.grid(row=5, column=0 )
            btn_continue.grid(row=4, column=0)

            def continue_learning():
                ansLabel.destroy()
                ansLabel2.destroy()
                btn_continue.destroy()
                questionLabel.destroy()
                if arithmetic == "+":
                    addition()
                elif arithmetic == "-":
                    subtraction()
                elif arithmetic == "x":
                    multiplication()
                elif arithmetic == "/":
                    dvision()



        else:
            questionLabel.config(text="{0} + {1} = {2}".format(x,y,realAns))
            ansLabel = Label(frame, text="Wrong!", font="Time 21")
            ansLabel.grid(row=1, column=0)
            btn_continue = Button(frame, text="Continue", font="Time 15", padx=35, pady=35,
                                  command=lambda: continue_l())
            btn_continue.grid(row=4, column=0)

            def continue_l():
                ansLabel.destroy()
                questionLabel.destroy()
                btn_continue.destroy()
                if arithmetic == "+":
                    addition()
                elif arithmetic == "-":
                    subtraction()
                elif arithmetic == "x":
                    multiplication()
                elif arithmetic == "/":
                    dvision()

# store the followings into list
def storeAns(x, y):
    # print("inside storeAns")
    # print("arithmetic: " + arithmetic)
    anslist = []
    ans_inList = False
    global realAns

    if arithmetic == "+":
        realAns = x + y
        for index in range(4):
            ans = int(random() * 10)
            anslist.append(ans)
            if anslist[index] == realAns:
                ans_inList = True
                print("answer already in the list")
            print(anslist[index])

        print("correct answer ", realAns)
        i = randint(0, 3)
        print(" index = ", i)

        if ans_inList == False:
            anslist[i] = realAns
        print(anslist[i])
    elif arithmetic == "-":
        realAns = x - y
        for index in range(4):
            ans = int(random() * 10)
            anslist.append(ans)
            if anslist[index] == realAns:
                ans_inList = True
                print("answer already in the list")
            print(anslist[index])

        print("correct answer " , realAns )
        i = randint(0, 3)
        print(" index = ",i )

        if ans_inList == False:
            anslist[i] = realAns
        print(anslist[i])
    elif arithmetic == "x":
        realAns = x * y
        for index in range(4):
            ans = int(random() * 10)
            anslist.append(ans)
            if anslist[index] == realAns:
                ans_inList = True
                print("answer already in the list")
            print(anslist[index])

        print("correct answer " , realAns )
        i = randint(0, 3)
        print(" index = ",i )

        if ans_inList == False:
            anslist[i] = realAns
        print(anslist[i])
    elif arithmetic == "/":
        realAns = x / y
        for index in range(4):
            ans = int(random() * 10)
            anslist.append(ans)
            if anslist[index] == realAns:
                ans_inList = True
                print("answer already in the list")
            print(anslist[index])

        print("correct answer " , realAns )
        i = randint(0, 3)
        print(" index = ",i )

        if ans_inList == False:
            anslist[i] = realAns
        print(anslist[i])
    return anslist


def addition():
    global arithmetic
    arithmetic = "+"
    destroyMenu()
    # 2개의 번호생성 ex 9+5
    x, y = click()
    questionLabel = Label(frame, text="{0} + {1} = __".format(x, y), font="Time 19")
    questionLabel.grid(row=0, column=0, columnspan=2)
    z = storeAns(x, y)
    ansButton(x,y,z,questionLabel)


def subtraction():
    global arithmetic
    arithmetic = "-"
    destroyMenu()
    # 2개의 번호생성 ex 9+5
    x, y = click()
    questionLabel = Label(frame, text="{0} - {1} = __".format(x, y), font="Time 19")
    questionLabel.grid(row=0, column=0, columnspan=2)
    z = storeAns(x, y)
    ansButton(z,questionLabel)


def multiplication():
    global arithmetic
    arithmetic = "x"
    destroyMenu()
    # 2개의 번호생성 ex 9+5
    x, y = click()
    questionLabel = Label(frame, text="{0} x {1} = __".format(x, y), font="Time 19")
    questionLabel.grid(row=0, column=0, columnspan=2)
    z = storeAns(x, y)
    ansButton(z,questionLabel)


def dvision():
    global arithmetic
    arithmetic = "/"
    destroyMenu()
    # 2개의 번호생성 ex 9+5
    x, y = click()  
    questionLabel = Label(frame, text="{0} / {1} = __".format(x, y), font="Time 19")
    questionLabel.grid(row=0, column=0, columnspan=2)
    z = storeAns(x, y)
    ansButton(z,questionLabel)


# buttons
btn_addition = Button(frame, text="+", padx=35, pady=35, command=addition)
btn_subtraction = Button(frame, text="-", padx=35, pady=35, command=subtraction)
btn_multiplication = Button(frame, text="x", padx=35, pady=35, command=multiplication)
btn_dvision = Button(frame, text="/", padx=35, pady=35, command=dvision)
btn_exit = Button(frame, text="Exit", padx=35, pady=35, command=win.quit)
btn_exit.grid(row=2, column=0, columnspan=2)

btn_addition.grid(row=0, column=0)
btn_subtraction.grid(row=0, column=1)
btn_multiplication.grid(row=1, column=0)
btn_dvision.grid(row=1, column=1)

frame.pack()

win.mainloop()
